name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        working-directory: backend
        run: cargo fmt --all -- --check

      - name: Run Clippy
        working-directory: backend
        run: cargo clippy --all-targets --all-features -- -D warnings

  build:
    name: Build BOLT Programs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.17.0/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Cache Solana tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: ${{ runner.os }}-solana-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Install BOLT CLI
        run: |
          cargo install --git https://github.com/magicblock-labs/bolt bolt-cli || echo "BOLT CLI already installed"

      - name: Build programs
        working-directory: backend
        run: |
          # Build all components
          cd programs-ecs/components
          for component in */; do
            echo "Building component: $component"
            cd "$component"
            cargo build-bpf --manifest-path Cargo.toml || cargo build
            cd ..
          done
          
          # Build all systems
          cd ../systems
          for system in */; do
            echo "Building system: $system"
            cd "$system"
            cargo build-bpf --manifest-path Cargo.toml || cargo build
            cd ..
          done

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bolt-programs
          path: |
            backend/target/deploy/*.so
            backend/target/idl/*.json
          if-no-files-found: warn

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.17.0/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}

      - name: Run unit tests
        working-directory: backend
        run: |
          # Test all components
          cd programs-ecs/components
          for component in */; do
            echo "Testing component: $component"
            cd "$component"
            cargo test || echo "No tests for $component"
            cd ..
          done
          
          # Test all systems
          cd ../systems
          for system in */; do
            echo "Testing system: $system"
            cd "$system"
            cargo test || echo "No tests for $system"
            cd ..
          done

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        working-directory: backend
        run: cargo audit --ignore RUSTSEC-2021-0145

